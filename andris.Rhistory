notikusas_uzskaites=Dist_Dataset %>%
dplyr::select(trans_kods,uzsk_ID,Jday) %>%
distinct() %>%
arrange(trans_kods,uzsk_ID)
Tpilnais <- merge(notikusas_uzskaites, Tsugasdati, by=c("trans_kods", "uzsk_ID"),
all.x=TRUE, sort=TRUE)
View(Tpilnais)
Tpilnais=Tpilnais %>%
dplyr::select(trans_kods,uzsk_ID,J50,J150,J250,Jtalak)
Tpilnais[is.na(Tpilnais)] <- 0
Tpilnais=Tpilnais %>%
left_join(reizem,by=c("trans_kods","uzsk_ID")) %>%
arrange(trans_kods,uzsk_ID)
Tpilnais=Tpilnais %>%
full_join(reizem,by=c("trans_kods","uzsk_ID")) %>%
arrange(trans_kods,uzsk_ID)
View(Tpilnais)
# radām tabulu, kurā katram punktam ir visas teorētiski iespējamās uzskaites
transektes <- sort(unique(Tpilnais$trans_kods))
transektes_uzsk <- data.frame(expand.grid(trans_kods = transektes, uzsk_ID = 1:6))
transektes_uzsk <- transektes_uzsk[order(transektes_uzsk$trans_kods, transektes_uzsk$uzsk_ID),]
head(transektes_uzsk)
dim(transektes_uzsk)
# savienojam visu punktu visas uzskaites (arī nenotikušās) ar notikušo datiem
Tpilnais <- merge(transektes_uzsk, Tpilnais, by=c("trans_kods", "uzsk_ID"), all.x=TRUE, sort=FALSE)
head(Tpilnais)
dim(Tpilnais)
notikusas_uzskaites=Dist_Dataset %>%
dplyr::select(trans_kods,uzsk_ID,Jday) %>%
distinct() %>%
arrange(trans_kods,uzsk_ID)
reizem=expand.grid(trans_kods=levels(factor(Dist_Dataset$trans_kods)),
uzsk_ID=1:6)
Tpilnais <- merge(notikusas_uzskaites, Tsugasdati, by=c("trans_kods", "uzsk_ID"),
all.x=TRUE, sort=TRUE)
Tpilnais=Tpilnais %>%
dplyr::select(trans_kods,uzsk_ID,J50,J150,J250,Jtalak)
Tpilnais[is.na(Tpilnais)] <- 0
Tpilnais=Tpilnais %>%
full_join(reizem,by=c("trans_kods","uzsk_ID")) %>%
arrange(trans_kods,uzsk_ID)
# radām tabulu, kurā katram punktam ir visas teorētiski iespējamās uzskaites
transektes <- sort(unique(Tpilnais$trans_kods))
transektes_uzsk <- data.frame(expand.grid(trans_kods = transektes, uzsk_ID = 1:6))
transektes_uzsk <- transektes_uzsk[order(transektes_uzsk$trans_kods, transektes_uzsk$uzsk_ID),]
head(transektes_uzsk)
dim(transektes_uzsk)
# savienojam visu punktu visas uzskaites (arī nenotikušās) ar notikušo datiem
Tpilnais <- merge(transektes_uzsk, Tpilnais, by=c("trans_kods", "uzsk_ID"), all.x=TRUE, sort=FALSE)
head(Tpilnais)
dim(Tpilnais)
#Pārbaudīt, vai uzskaišu reižu skaits ir vienāds.
ggplot(Tpilnais, aes(trans_kods,)) + geom_histogram(,stat="count")
# Tauriņu tabula satur izvēlētās sugas novērojumu datus katrā punktā, sadalītus pa attāluma joslām
taurini <- Tpilnais[,c(1,2,28:31)]
head(taurini)
notikusas_uzskaites=Dist_Dataset %>%
dplyr::select(trans_kods,uzsk_ID,Jday) %>%
distinct() %>%
arrange(trans_kods,uzsk_ID)
reizem=expand.grid(trans_kods=levels(factor(Dist_Dataset$trans_kods)),
uzsk_ID=1:6)
Tpilnais <- merge(notikusas_uzskaites, Tsugasdati, by=c("trans_kods", "uzsk_ID"),
all.x=TRUE, sort=TRUE)
Tpilnais=Tpilnais %>%
dplyr::select(trans_kods,uzsk_ID,J50,J150,J250,Jtalak)
Tpilnais[is.na(Tpilnais)] <- 0
Tpilnais=Tpilnais %>%
full_join(reizem,by=c("trans_kods","uzsk_ID")) %>%
arrange(trans_kods,uzsk_ID)
# radām tabulu, kurā katram punktam ir visas teorētiski iespējamās uzskaites
transektes <- sort(unique(Tpilnais$trans_kods))
transektes_uzsk <- data.frame(expand.grid(trans_kods = transektes, uzsk_ID = 1:6))
transektes_uzsk <- transektes_uzsk[order(transektes_uzsk$trans_kods, transektes_uzsk$uzsk_ID),]
head(transektes_uzsk)
dim(transektes_uzsk)
# savienojam visu punktu visas uzskaites (arī nenotikušās) ar notikušo datiem
Tpilnais <- merge(transektes_uzsk, Tpilnais, by=c("trans_kods", "uzsk_ID"), all.x=TRUE, sort=FALSE)
head(Tpilnais)
dim(Tpilnais)
#Pārbaudīt, vai uzskaišu reižu skaits ir vienāds.
ggplot(Tpilnais, aes(trans_kods,)) + geom_histogram(,stat="count")
# Tauriņu tabula satur izvēlētās sugas novērojumu datus katrā punktā, sadalītus pa attāluma joslām
taurini <- Tpilnais
head(taurini)
TY <- reshape(taurini, v.names=c("J50", "J150", "J250", "Jtalak"), idvar="trans_kods", timevar="uzsk_ID", direction="wide")
head(TY)
View(TY)
TY <- subset(TY, select=c(-trans_kods))
dim(TY) # 119 transektes x 24 (4 joslas * 6 uzskaitēs)
# Tabula "Uzskaites"  -----------------------
# Veidojam atsevišķu tabulu ar visām transektēm un uzskaites reizēm, lai tā kalpotu kā skelets
transektes <- sort(unique(Dist_Dataset$trans_kods))
trans_uzsk <- data.frame(expand.grid(trans_kods = transektes, uzsk_ID = 1:6))
head(trans_uzsk)
tail(trans_uzsk)
# No Dist_Dataset atlasām unikālus transektu aprakstus
data.frame(Numurs = seq_along(Dist_Dataset), Kolonna = names(Dist_Dataset))
TUzskaites <- Dist_Dataset[,c(1:7, 11: 29)]
TUzskaites <- TUzskaites %>%
distinct(trans_kods, uzsk_ID, .keep_all = TRUE)
View(TUzskaites)
## Iztrūkstoša uzskaite -----
# Ķemeris 3. uzsdkaite
kemeri_trans <- Dist_Dataset %>%
filter(vieta == "Ķemeri") %>%
distinct(trans_kods) %>%
slice_head(n = 39) %>%
pull(trans_kods)
kemeri_3 <- tibble(
vieta = "Ķemeri",
uzsk_ID = 3,
trans_kods = kemeri_trans
)
TUzskaites <- bind_rows(TUzskaites, kemeri_3)
# Ķemeri 1. uzskaite
kemeri_trans
Kemeri_1 <- Dist_Dataset[Dist_Dataset$vieta == "Ķemeri",] %>% filter(uzsk_ID == 1)
trans_1 <- Kemeri_1 %>% distinct(trans_kods)
dim(trans_1)
# Meklējam, kuras trūkst
kemeri_trans <- data.frame(trans_kods = kemeri_trans)
iztrukstosie <- anti_join(kemeri_trans, Kemeri_1, by = "trans_kods")
Kemeri_1_tuksas_rindas <- iztrukstosie %>%
mutate(
uzsk_ID = 1,
vieta = "Ķemeri"
)
TUzskaites <- bind_rows(TUzskaites, Kemeri_1_tuksas_rindas)
table(TUzskaites$trans_kods) # viur jābūt 6
table(table(TUzskaites$trans_kods))
TUzskaites=TUzskaites %>%
arrange(trans_kods,uzsk_ID)
View(TUzskaites)
# Tabula "Vietas" ----------------------------
TVietas <- read_excel("uzskaisu_dati.xlsx", sheet = "Vietas")
TVietas <- TVietas[!TVietas$vieta=="Šlītere",] #Izņemt Šlīteres transektes
unique(TVietas$vieta)
TVietas <- TVietas[-101,] # izslēgtā transekte
# Kolonnu dzēšana
TVietas <- TVietas[ , -c(8:9)]
# Grupu balansēšana
TVietas <- TVietas %>% # Samazināt grupu skaitu
mutate(kust_int = case_when(
kust_int %in% c("Nav") ~ "Zemā",
kust_int %in% c("Vidējā") ~ "Augstā",
TRUE ~ kust_int
))
# Maksimālais stāvu skaits transektē
maks_stavi <- Dist_Dataset %>%
group_by(trans_kods) %>%
summarise(maks_stavu_sk = max(stavu_sk, na.rm = TRUE))
TVietas <- TVietas %>%
left_join(maks_stavi, by = "trans_kods")
# Maksimālais ziedu skaits transektē
maks_ziedi <- Dist_Dataset %>%
group_by(trans_kods) %>%
summarise(maks_ziedu_sk = max(ziedi_sum, na.rm = TRUE))
TVietas <- TVietas %>%
left_join(maks_ziedi, by = "trans_kods") %>%
arrange(trans_kods)
## Iztrūkstoša uzskaite -----
kemeri_trans <- Dist_Dataset %>%
filter(vieta == "Ķemeri") %>%
distinct(trans_kods) %>%
slice_head(n = 39) %>%
pull(trans_kods)
kemeri_3 <- tibble(
vieta = "Ķemeri",
uzsk_ID = 3,
trans_kods = kemeri_trans
)
Dist_Dataset <- bind_rows(Dist_Dataset, kemeri_3)
#Modeļa iestatījumi
R = 119 #transekšu skaits.
T <- 6  # 6 atkārtotas uzskaites
garums <- 100
TK=100 #	An integer value specifying the upper bound used in the integration.
Tdist.breaks <- c(0, 0.5, 1.5, 2.5, 4)
numDistClasses <- length(Tdist.breaks) - 1  # = 4
Tmixture="P"
TunitsOut="ha"
Toutput="density"
TVisiudfGDS<-unmarkedFrameGDS(y=TY,
siteCovs=TVietas,
dist.breaks=Tdist.breaks,
numPrimary=T,
yearlySiteCovs=TUzskaites,
survey="line",
unitsIn="m",
tlength=rep(garums, R))
summary(TVisiudfGDS)
head(yearlySiteCovs(TVisiudfGDS),12)
## Nulles modelis half norm ----
m0hal <- gdistsamp(~1, ~1, ~1, TVisiudfGDS, keyfun ="hazard", output=Toutput, mixture=Tmixture,
K=TK, unitsOut=TunitsOut)
summary(m0hal)
m1hal <- gdistsamp(~1, ~1, ~1, TVisiudfGDS, keyfun ="hazard", output=Toutput, mixture="NB",
K=TK, unitsOut=TunitsOut)
summary(m1hal)
m2hal <- gdistsamp(~1, ~1, ~1, TVisiudfGDS, keyfun ="hazard", output=Toutput, mixture="ZIP",
K=TK, unitsOut=TunitsOut)
summary(m2hal)
m_doy_hal <- gdistsamp(~1+scale(maks_ziedu_sk)+scale(maks_stavu_sk)+kust_int, # lambda = abundance
~scale(Jday)+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
predict(m_doy_hal,type="lambda")/20
summary(TUzskaites$temp_vid)
newdata=expand.grid(vieta=c("Apšupe","Ģipka","Ķemeri"),
Jday=seq(160,250,10),
vej_atr_vid=seq(0,5,1),
temp_vid=seq(13,30,5))
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
kraa=cbind(newdata,a)
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()
newdata=expand.grid(#vieta=c("Apšupe","Ģipka","Ķemeri"),
Jday=seq(160,250,10),
#vej_atr_vid=seq(0,5,1),
temp_vid=seq(13,30,5))
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
kraa=cbind(newdata,a)
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()+
facet_wrap(~temp_vid)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+scale(maks_ziedu_sk)+scale(maks_stavu_sk)+kust_int, # lambda = abundance
~scale(Jday):vieta+I(scale(Jday)^2):vieta, # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+scale(maks_ziedu_sk)+scale(maks_stavu_sk)+kust_int, # lambda = abundance
~scale(Jday)+I(scale(Jday)^2)+vieta, # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
predict(m_doy_hal,type="lambda")/20
newdata=expand.grid(vieta=c("Apšupe","Ģipka","Ķemeri"),
#vej_atr_vid=seq(0,5,1),
#temp_vid=seq(13,30,5))
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
newdata=expand.grid(vieta=c("Apšupe","Ģipka","Ķemeri"),
Jday=seq(160,250,10),
#vej_atr_vid=seq(0,5,1),
#temp_vid=seq(13,30,5)
)
newdata=expand.grid(vieta=c("Apšupe","Ģipka","Ķemeri")
,Jday=seq(160,250,10)
#,vej_atr_vid=seq(0,5,1)
#,temp_vid=seq(13,30,5)
)
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
kraa=cbind(newdata,a)
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()+
facet_wrap(~vieta)
m_doy_hal <- gdistsamp(~1+scale(maks_ziedu_sk)+scale(maks_stavu_sk)+kust_int, # lambda = abundance
~scale(Jday)+I(scale(Jday)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
newdata=expand.grid(#vieta=c("Apšupe","Ģipka","Ķemeri")
Jday=seq(160,250,10)
#,vej_atr_vid=seq(0,5,1)
#,temp_vid=seq(13,30,5)
)
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
kraa=cbind(newdata,a)
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()+
scale_y_continuous(limits = c(0,1))+
theme_bw()
m_doy_hal <- gdistsamp(~1+scale(maks_stavu_sk)+kust_int, # lambda = abundance
~scale(Jday)+I(scale(Jday)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+scale(maks_stavu_sk)*kust_int, # lambda = abundance
~scale(Jday)+I(scale(Jday)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~scale(Jday)+I(scale(Jday)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~+I(scale(Jday)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
predict(m_doy_hal,type="lambda")/20
newdata=expand.grid(#vieta=c("Apšupe","Ģipka","Ķemeri")
Jday=seq(160,250,10)
#,vej_atr_vid=seq(0,5,1)
#,temp_vid=seq(13,30,5)
)
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
kraa=cbind(newdata,a)
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()+
scale_y_continuous(limits = c(0,1))+
theme_bw()
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+poly(scale(Jday),2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+kust_int+vieta, # lambda = abundance
~1+I(scale(Jday)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
newdata=expand.grid(#vieta=c("Apšupe","Ģipka","Ķemeri")
Jday=seq(160,250,10)
#,vej_atr_vid=seq(0,5,1)
,temp_vid=seq(13,30,5)
)
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
kraa=cbind(newdata,a)
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()+
scale_y_continuous(limits = c(0,1))+
theme_bw()+
facet_wrap(~temp_vid)
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(laiks_min_sak), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
## DoY modelis -----
summary(TVisiudfGDS)
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(laiks_min_vid), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(vej_atr_vid), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+scale(vej_atr_vid), # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
newdata=expand.grid(#vieta=c("Apšupe","Ģipka","Ķemeri")
Jday=seq(160,250,10)
#,vej_atr_vid=seq(0,5,1)
,temp_vid=seq(13,35,5)
)
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
newdata=expand.grid(#vieta=c("Apšupe","Ģipka","Ķemeri")
Jday=seq(160,250,10)
,vej_atr_vid=seq(0,5,1)
,temp_vid=seq(13,35,5)
)
a=as.data.frame(predict(m_doy_hal,type="phi",newdata))
kraa=cbind(newdata,a)
ggplot(kraa,aes(Jday,Predicted,ymin=lower,ymax=upper))+
geom_ribbon(alpha=0.5)+
geom_line()+
scale_y_continuous(limits = c(0,1))+
theme_bw()+
facet_grid(vej_atr_vid~temp_vid)
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(vej_atr_vid)+traucejumi, # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+kust_int, # lambda = abundance
~1+scale(Jday)+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(vej_atr_vid)+traucejumi, # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+scale(maks_stavu_sk), # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(vej_atr_vid)+traucejumi, # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1+scale(maks_ziedu_sk), # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(vej_atr_vid)+traucejumi, # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
m_doy_hal <- gdistsamp(~1, # lambda = abundance
~1+I(scale(Jday)^2)+scale(temp_vid)+I(scale(temp_vid)^2)+scale(vej_atr_vid)+traucejumi, # phi = availability
~1, # pi = detection
TVisiudfGDS,
keyfun ="hazard",
output=Toutput,
mixture="NB",
K=TK,
unitsOut=TunitsOut)
summary(m_doy_hal) # Pieejamība nav būtiska
save.image("C:/Users/jekat/Desktop/Bakalaura-darbs/andris.RData")
savehistory("C:/Users/jekat/Desktop/Bakalaura-darbs/andris.Rhistory")
